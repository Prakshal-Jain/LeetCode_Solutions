/**
 * Definition for singly-linked list.
 * class ListNode(_x: Int = 0, _next: ListNode = null) {
 *   var next: ListNode = _next
 *   var x: Int = _x
 * }
 */
object Solution {
  def isPalindrome(head: ListNode): Boolean = {
    if(head == null){
      true
    }
    else {
      var array: Array[Int] = Array()
      var currNode = head
      while (currNode != null) {
        array = array :+ currNode.x
        currNode = currNode.next
      }
      var end = array.length - 1
      var start = 0
      var stop = false
      for (e <- 0 to (array.length) / 2 if !stop) {
        if (array(start) != array(end)) {
          stop = true
        }
        start += 1
        end -= 1
      }
      !stop
    }
  }
}
