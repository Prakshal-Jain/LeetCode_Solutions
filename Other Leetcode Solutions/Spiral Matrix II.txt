def helpPopulate(matrix, length, width, start):
    i = length[0]
    count = start
    # Start from horizontal row
    while(i <= length[1]):
        matrix[width[0]][i] = count
        count += 1
        i += 1
    j = width[0] + 1
    while(j <= width[1]):
        matrix[j][length[1]] = count
        count += 1
        j += 1
    i = length[1]-1
    j = width[1]
    while(i >= length[0]):
        matrix[j][i] = count
        count += 1
        i -= 1
    i = length[0]
    j = width[1]-1
    while(j > width[0]):
        matrix[j][i] = count
        count += 1
        j -= 1
    return count

class Solution:
    def generateMatrix(self, n: int) -> List[List[int]]:
        if(n == 0):
            return []
        elif(n == 1):
            return [[1]]
        matrix = []
        i= 0
        while(i < n):
            arr = []
            j = 0
            while(j < n):
                arr.append(0)
                j += 1
            matrix.append(arr)
            i += 1
        length = [0, n-1]
        count = 1
        while(count <= n*n):
            count = helpPopulate(matrix, length, length, count)
            length[0] += 1
            length[1] -= 1
        return matrix
