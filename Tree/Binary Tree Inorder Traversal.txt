/**
 * Definition for a binary tree node.
 * class TreeNode(_value: Int = 0, _left: TreeNode = null, _right: TreeNode = null) {
 *   var value: Int = _value
 *   var left: TreeNode = _left
 *   var right: TreeNode = _right
 * }
 */
object Solution {
  def inorderTraversal(root: TreeNode): List[Int] = {
    var inOrder: List[Int] = List()
    def inner(rootNode: TreeNode): Unit = {
      if(rootNode == null){
        return
      }
      inner(rootNode.left)
      inOrder = inOrder :+ rootNode.value
      inner(rootNode.right)
    }
    inner(root)
    inOrder
  }
}
