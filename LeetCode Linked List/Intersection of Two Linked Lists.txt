/**
 * Definition for singly-linked list.
 * class ListNode(var _x: Int = 0) {
 *   var next: ListNode = null
 *   var x: Int = _x
 * }
 */

object Solution {
  def getIntersectionNode(headA: ListNode, headB: ListNode): ListNode = {
    if(headA == null || headB == null){
      null
    }
    else {
      var ptr1 = headA
      var ptr2 = headB
      while (true) {
        while (ptr1 != null && ptr2 != null) {
          if (ptr1 == ptr2) {
            return ptr1
          }
          else {
            ptr1 = ptr1.next
            ptr2 = ptr2.next
          }
        }
        if (ptr1 == null && ptr2 != null) {
          ptr1 = headB
        }
        else if (ptr2 == null && ptr1 != null) {
          ptr2 = headA
        }
        else {
          return null
        }
      }
      null
    }
  }
}
