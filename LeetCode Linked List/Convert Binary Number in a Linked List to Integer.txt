/**
 * Definition for singly-linked list.
 * class ListNode(_x: Int = 0, _next: ListNode = null) {
 *   var next: ListNode = _next
 *   var x: Int = _x
 * }
 */
object Solution {
  def reverseList(head: ListNode): ListNode = {
    var currNode = head
    var prev:ListNode = null
    while(currNode != null){
      var temp = currNode.next
      currNode.next = prev
      prev = currNode
      currNode = temp
    }
    prev
  }

  def getDecimalValue(head: ListNode): Int = {
    var total = 0
    var index = 0
    var currNode = reverseList(head)
    while(currNode != null){
      if(currNode.x == 1){
        total += math.pow(2, index).toInt
      }
      index += 1
      currNode = currNode.next
    }
    total
  }
}
